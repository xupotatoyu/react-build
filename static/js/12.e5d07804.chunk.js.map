{"version":3,"sources":["containters/Sign/Sign.js"],"names":["Sign","props","getInputValue","key","event","target","value","setState","username","password","fetchPost","url","params","self","fetch","body","JSON","stringify","headers","method","then","response","json","res","errno","success","history","push","error","catch","console","signIn","log","state","className","ref","Item","label","name","rules","required","message","placeholder","onChange","prefix","suffix","title","style","color","Password","type","block","onClick","this","React","Component"],"mappings":"iXAKMA,E,kDACJ,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAMRC,cAAc,SAACC,EAAIC,GACjB,GAAGA,GAASA,EAAMC,QAAUD,EAAMC,OAAOC,MAAM,CAC3C,IAAIA,EAAQF,EAAMC,OAAOC,MAChB,aAANH,EACD,EAAKI,SAAS,CACZC,SAASF,IAGX,EAAKC,SAAS,CACZE,SAASH,MAhBD,EAsBlBI,UAAU,SAACC,EAAIC,GACb,IAAIC,EAAI,eACRC,MAAMH,EAAK,CACTI,KAAMC,KAAKC,UAAUL,GACrBM,QAAS,CACP,eAAgB,oBAElBC,OAAQ,SACPC,MAAK,SAAAC,GACN,OAAOA,EAASC,UACfF,MAAK,SAAAG,GACW,IAAdA,EAAIC,OACL,IAAQC,QAAQ,wCAChBZ,EAAKZ,MAAMyB,QAAQC,KAAK,UAExB,IAAQC,MAAM,+BAEfC,OAAM,SAAAD,GAAK,OAAIE,QAAQF,MAAMA,OAvChB,EA0ClBG,OAAO,WACLD,QAAQE,IAAI,gBACZ,IACIpB,EAAQ,CACNJ,SAAS,EAAKyB,MAAMzB,SACpBC,SAAS,EAAKwB,MAAMxB,UAE1B,EAAKC,UALK,iBAKSE,IA/CnB,EAAKqB,MAAQ,CACXzB,SAAS,GACTC,SAAS,IAJK,E,qDAmDT,IAAD,OACN,OACE,yBAAKyB,UAAU,QACb,yBAAKA,UAAU,aACf,uBAAMC,IAAI,gBACJ,sBAAMC,KAAN,CACAC,MAAM,WACNC,KAAK,WACLC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,iCAEjC,uBACEC,YAAY,sBACZC,SAAU,SAAAvC,GAAK,OAAE,EAAKF,cAAc,WAAWE,IAC/CwC,OAAQ,kBAAC,IAAD,CAAcV,UAAU,wBAChCW,OACE,uBAASC,MAAM,qBACb,kBAAC,IAAD,CAAoBC,MAAO,CAAEC,MAAO,yBAK5C,sBAAMZ,KAAN,CACAC,MAAM,WACNC,KAAK,WACLC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,iCAEjC,sBAAOQ,SAAP,CACEN,SAAU,SAAAvC,GAAK,OAAE,EAAKF,cAAc,WAAWE,IAC/CwC,OAAQ,kBAAC,IAAD,CAAeG,MAAO,CAAEC,MAAO,qBACvCN,YAAY,qBAGlB,uBAAQQ,KAAK,UAAUC,OAAK,EAACC,QAASC,KAAKtB,QAA3C,iB,GApFOuB,IAAMC,WA2FVvD","file":"static/js/12.e5d07804.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Sign.less';\r\nimport {message,Form,Input,Tooltip, Button } from 'antd';\r\nimport { InfoCircleOutlined, UserOutlined,LockOutlined } from '@ant-design/icons';\r\n\r\nclass Sign extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = { \r\n      username:'',\r\n      password:''\r\n    };\r\n  }\r\n  getInputValue=(key,event)=>{\r\n    if(event && event.target && event.target.value){\r\n        let value = event.target.value;\r\n        if(key==='username'){\r\n          this.setState({\r\n            username:value\r\n          })\r\n        }else {\r\n          this.setState({\r\n            password:value\r\n          })\r\n        }\r\n    }\r\n  }\r\n  // 注册请求\r\n  fetchPost=(url,params)=>{\r\n    let self = this\r\n    fetch(url, {\r\n      body: JSON.stringify(params),\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n      method: 'POST'\r\n    }).then(response=>{\r\n      return response.json()\r\n    }).then(res=>{\r\n      if(res.errno === 0){\r\n        message.success('注册账号成功')\r\n        self.props.history.push('/main')\r\n      }else{\r\n        message.error('注册失败')\r\n      }\r\n    }).catch(error => console.error(error))\r\n  }\r\n  \r\n  signIn=()=>{\r\n    console.log('注册')\r\n    let url = '/api/user/sign'\r\n    let params ={\r\n          username:this.state.username,\r\n          password:this.state.password\r\n    }\r\n    this.fetchPost(url,params)\r\n  }\r\n  render(){\r\n    return(\r\n      <div className=\"sign\">\r\n        <div className=\"sign-form\">\r\n        <Form ref=\"getFormVlaue\">\r\n              <Form.Item\r\n              label=\"Username\"\r\n              name=\"username\"\r\n              rules={[{ required: true, message: 'Please input your username!' }]}\r\n              >\r\n                <Input\r\n                  placeholder=\"Enter your username\"\r\n                  onChange={event=>this.getInputValue('username',event)}\r\n                  prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                  suffix={\r\n                    <Tooltip title=\"Extra information\">\r\n                      <InfoCircleOutlined style={{ color: 'rgba(0,0,0,.45)' }} />\r\n                    </Tooltip>\r\n                  }\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              rules={[{ required: true, message: 'Please input your password!' }]}\r\n              >\r\n                <Input.Password \r\n                  onChange={event=>this.getInputValue('password',event)}\r\n                  prefix={<LockOutlined  style={{ color: 'rgba(0,0,0,.45)' }} />}\r\n                  placeholder=\"input password\" />\r\n              </Form.Item>\r\n            </Form>\r\n            <Button type=\"primary\" block onClick={this.signIn}>Sign in</Button>\r\n      </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Sign;"],"sourceRoot":""}